// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PokemonBank.Api.Infrastructure;

#nullable disable

namespace PokemonBank.Api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250811113030_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.8");

            modelBuilder.Entity("PokemonBank.Api.Domain.Entities.FileEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Format")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ImportedAt")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("RawBlob")
                        .HasColumnType("BLOB");

                    b.Property<string>("Sha256")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("Size")
                        .HasColumnType("INTEGER");

                    b.Property<string>("StoredPath")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Sha256")
                        .IsUnique();

                    b.ToTable("Files");
                });

            modelBuilder.Entity("PokemonBank.Api.Domain.Entities.MoveEntity", b =>
                {
                    b.Property<int>("PokemonId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Slot")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MoveId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PpUps")
                        .HasColumnType("INTEGER");

                    b.HasKey("PokemonId", "Slot");

                    b.ToTable("Moves");
                });

            modelBuilder.Entity("PokemonBank.Api.Domain.Entities.PokemonEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AbilityId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("BallId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Favorite")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FileId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsShiny")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Level")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("MetDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("MetLocation")
                        .HasColumnType("TEXT");

                    b.Property<int>("Nature")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nickname")
                        .HasColumnType("TEXT");

                    b.Property<string>("Notes")
                        .HasColumnType("TEXT");

                    b.Property<int>("OriginGame")
                        .HasColumnType("INTEGER");

                    b.Property<string>("OtName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Sid")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SpeciesId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SpriteKey")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("TeraType")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Tid")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("OriginGame");

                    b.HasIndex("SpeciesId", "IsShiny");

                    b.ToTable("Pokemon");
                });

            modelBuilder.Entity("PokemonBank.Api.Domain.Entities.PokemonTagEntity", b =>
                {
                    b.Property<int>("PokemonId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TagId")
                        .HasColumnType("INTEGER");

                    b.HasKey("PokemonId", "TagId");

                    b.ToTable("PokemonTags");
                });

            modelBuilder.Entity("PokemonBank.Api.Domain.Entities.StatsEntity", b =>
                {
                    b.Property<int>("PokemonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("EvAtk")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EvDef")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EvHp")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EvSpa")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EvSpd")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EvSpe")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("HyperTrainedAtk")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("HyperTrainedDef")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("HyperTrainedHp")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("HyperTrainedSpa")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("HyperTrainedSpd")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("HyperTrainedSpe")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IvAtk")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IvDef")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IvHp")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IvSpa")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IvSpd")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IvSpe")
                        .HasColumnType("INTEGER");

                    b.HasKey("PokemonId");

                    b.ToTable("Stats");
                });

            modelBuilder.Entity("PokemonBank.Api.Domain.Entities.TagEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Tags");
                });
#pragma warning restore 612, 618
        }
    }
}
